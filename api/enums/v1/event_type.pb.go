// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: temporal/api/enums/v1/event_type.proto

package enums

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Whenever this list of events is changed do change the function shouldBufferEvent in mutableStateBuilder.go to make sure to do the correct event ordering.
type EventType int32

const (
	EVENT_TYPE_UNSPECIFIED                                          EventType = 0
	EVENT_TYPE_WORKFLOW_EXECUTION_STARTED                           EventType = 1
	EVENT_TYPE_WORKFLOW_EXECUTION_COMPLETED                         EventType = 2
	EVENT_TYPE_WORKFLOW_EXECUTION_FAILED                            EventType = 3
	EVENT_TYPE_WORKFLOW_EXECUTION_TIMED_OUT                         EventType = 4
	EVENT_TYPE_WORKFLOW_TASK_SCHEDULED                              EventType = 5
	EVENT_TYPE_WORKFLOW_TASK_STARTED                                EventType = 6
	EVENT_TYPE_WORKFLOW_TASK_COMPLETED                              EventType = 7
	EVENT_TYPE_WORKFLOW_TASK_TIMED_OUT                              EventType = 8
	EVENT_TYPE_WORKFLOW_TASK_FAILED                                 EventType = 9
	EVENT_TYPE_ACTIVITY_TASK_SCHEDULED                              EventType = 10
	EVENT_TYPE_ACTIVITY_TASK_STARTED                                EventType = 11
	EVENT_TYPE_ACTIVITY_TASK_COMPLETED                              EventType = 12
	EVENT_TYPE_ACTIVITY_TASK_FAILED                                 EventType = 13
	EVENT_TYPE_ACTIVITY_TASK_TIMED_OUT                              EventType = 14
	EVENT_TYPE_ACTIVITY_TASK_CANCEL_REQUESTED                       EventType = 15
	EVENT_TYPE_ACTIVITY_TASK_CANCELED                               EventType = 16
	EVENT_TYPE_TIMER_STARTED                                        EventType = 17
	EVENT_TYPE_TIMER_FIRED                                          EventType = 18
	EVENT_TYPE_TIMER_CANCELED                                       EventType = 19
	EVENT_TYPE_WORKFLOW_EXECUTION_CANCEL_REQUESTED                  EventType = 20
	EVENT_TYPE_WORKFLOW_EXECUTION_CANCELED                          EventType = 21
	EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED EventType = 22
	EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED    EventType = 23
	EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_CANCEL_REQUESTED         EventType = 24
	EVENT_TYPE_MARKER_RECORDED                                      EventType = 25
	EVENT_TYPE_WORKFLOW_EXECUTION_SIGNALED                          EventType = 26
	EVENT_TYPE_WORKFLOW_EXECUTION_TERMINATED                        EventType = 27
	EVENT_TYPE_WORKFLOW_EXECUTION_CONTINUED_AS_NEW                  EventType = 28
	EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_INITIATED             EventType = 29
	EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_FAILED                EventType = 30
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_STARTED                     EventType = 31
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_COMPLETED                   EventType = 32
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_FAILED                      EventType = 33
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_CANCELED                    EventType = 34
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TIMED_OUT                   EventType = 35
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TERMINATED                  EventType = 36
	EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED         EventType = 37
	EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED            EventType = 38
	EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_SIGNALED                 EventType = 39
	EVENT_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES                    EventType = 40
)

var EventType_name = map[int32]string{
	0:  "Unspecified",
	1:  "WorkflowExecutionStarted",
	2:  "WorkflowExecutionCompleted",
	3:  "WorkflowExecutionFailed",
	4:  "WorkflowExecutionTimedOut",
	5:  "WorkflowTaskScheduled",
	6:  "WorkflowTaskStarted",
	7:  "WorkflowTaskCompleted",
	8:  "WorkflowTaskTimedOut",
	9:  "WorkflowTaskFailed",
	10: "ActivityTaskScheduled",
	11: "ActivityTaskStarted",
	12: "ActivityTaskCompleted",
	13: "ActivityTaskFailed",
	14: "ActivityTaskTimedOut",
	15: "ActivityTaskCancelRequested",
	16: "ActivityTaskCanceled",
	17: "TimerStarted",
	18: "TimerFired",
	19: "TimerCanceled",
	20: "WorkflowExecutionCancelRequested",
	21: "WorkflowExecutionCanceled",
	22: "RequestCancelExternalWorkflowExecutionInitiated",
	23: "RequestCancelExternalWorkflowExecutionFailed",
	24: "ExternalWorkflowExecutionCancelRequested",
	25: "MarkerRecorded",
	26: "WorkflowExecutionSignaled",
	27: "WorkflowExecutionTerminated",
	28: "WorkflowExecutionContinuedAsNew",
	29: "StartChildWorkflowExecutionInitiated",
	30: "StartChildWorkflowExecutionFailed",
	31: "ChildWorkflowExecutionStarted",
	32: "ChildWorkflowExecutionCompleted",
	33: "ChildWorkflowExecutionFailed",
	34: "ChildWorkflowExecutionCanceled",
	35: "ChildWorkflowExecutionTimedOut",
	36: "ChildWorkflowExecutionTerminated",
	37: "SignalExternalWorkflowExecutionInitiated",
	38: "SignalExternalWorkflowExecutionFailed",
	39: "ExternalWorkflowExecutionSignaled",
	40: "UpsertWorkflowSearchAttributes",
}

var EventType_value = map[string]int32{
	"Unspecified":                                     0,
	"WorkflowExecutionStarted":                        1,
	"WorkflowExecutionCompleted":                      2,
	"WorkflowExecutionFailed":                         3,
	"WorkflowExecutionTimedOut":                       4,
	"WorkflowTaskScheduled":                           5,
	"WorkflowTaskStarted":                             6,
	"WorkflowTaskCompleted":                           7,
	"WorkflowTaskTimedOut":                            8,
	"WorkflowTaskFailed":                              9,
	"ActivityTaskScheduled":                           10,
	"ActivityTaskStarted":                             11,
	"ActivityTaskCompleted":                           12,
	"ActivityTaskFailed":                              13,
	"ActivityTaskTimedOut":                            14,
	"ActivityTaskCancelRequested":                     15,
	"ActivityTaskCanceled":                            16,
	"TimerStarted":                                    17,
	"TimerFired":                                      18,
	"TimerCanceled":                                   19,
	"WorkflowExecutionCancelRequested":                20,
	"WorkflowExecutionCanceled":                       21,
	"RequestCancelExternalWorkflowExecutionInitiated": 22,
	"RequestCancelExternalWorkflowExecutionFailed":    23,
	"ExternalWorkflowExecutionCancelRequested":        24,
	"MarkerRecorded":                                  25,
	"WorkflowExecutionSignaled":                       26,
	"WorkflowExecutionTerminated":                     27,
	"WorkflowExecutionContinuedAsNew":                 28,
	"StartChildWorkflowExecutionInitiated":            29,
	"StartChildWorkflowExecutionFailed":               30,
	"ChildWorkflowExecutionStarted":                   31,
	"ChildWorkflowExecutionCompleted":                 32,
	"ChildWorkflowExecutionFailed":                    33,
	"ChildWorkflowExecutionCanceled":                  34,
	"ChildWorkflowExecutionTimedOut":                  35,
	"ChildWorkflowExecutionTerminated":                36,
	"SignalExternalWorkflowExecutionInitiated":        37,
	"SignalExternalWorkflowExecutionFailed":           38,
	"ExternalWorkflowExecutionSignaled":               39,
	"UpsertWorkflowSearchAttributes":                  40,
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b482d2737d9259e4, []int{0}
}

func init() {
	proto.RegisterEnum("temporal.api.enums.v1.EventType", EventType_name, EventType_value)
}

func init() {
	proto.RegisterFile("temporal/api/enums/v1/event_type.proto", fileDescriptor_b482d2737d9259e4)
}

var fileDescriptor_b482d2737d9259e4 = []byte{
	// 718 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x96, 0x5f, 0x4f, 0xd3, 0x50,
	0x18, 0xc6, 0x57, 0x54, 0x94, 0x57, 0xc5, 0x7a, 0x14, 0x1c, 0x08, 0x87, 0xff, 0xe3, 0x7f, 0xc7,
	0x84, 0x04, 0x33, 0x4c, 0xb4, 0xb4, 0xef, 0xe4, 0x84, 0xad, 0x9b, 0xed, 0xe9, 0x00, 0x6f, 0x1a,
	0x4c, 0x16, 0xb3, 0x44, 0x58, 0x83, 0x93, 0x84, 0x3b, 0x3f, 0x82, 0x1f, 0xc3, 0xf8, 0x01, 0xfc,
	0x0c, 0x5e, 0x72, 0x27, 0x97, 0x32, 0x6e, 0x8c, 0x57, 0x7c, 0x04, 0xd3, 0xd2, 0xad, 0xa5, 0xb0,
	0xae, 0x7a, 0xb7, 0xec, 0xfc, 0x9e, 0xe7, 0xbc, 0xcf, 0x7b, 0xde, 0x93, 0x53, 0x48, 0xd5, 0x2b,
	0x7b, 0x76, 0xed, 0x60, 0xf7, 0x43, 0x7a, 0xd7, 0xae, 0xa6, 0x2b, 0xfb, 0x9f, 0xf6, 0x3e, 0xa6,
	0x0f, 0x33, 0xe9, 0xca, 0x61, 0x65, 0xbf, 0x6e, 0xd5, 0x8f, 0xec, 0x8a, 0x64, 0x1f, 0xd4, 0xea,
	0x35, 0xd2, 0xd7, 0xe4, 0xa4, 0x5d, 0xbb, 0x2a, 0xb9, 0x9c, 0x74, 0x98, 0x99, 0xfb, 0xd9, 0x0b,
	0x3d, 0xe8, 0xb0, 0xfc, 0xc8, 0xae, 0x90, 0x41, 0xe8, 0xc7, 0x32, 0x6a, 0xdc, 0xe2, 0x3b, 0x25,
	0xb4, 0x4c, 0xcd, 0x28, 0xa1, 0xc2, 0x72, 0x0c, 0x55, 0x31, 0x41, 0x66, 0x61, 0x2a, 0xb0, 0xb6,
	0x55, 0xd4, 0x37, 0x73, 0xf9, 0xe2, 0x96, 0x85, 0xdb, 0xa8, 0x98, 0x9c, 0x15, 0x35, 0xcb, 0xe0,
	0xb2, 0xce, 0x51, 0x15, 0x05, 0x32, 0x0f, 0xd3, 0xd1, 0xa8, 0x52, 0x2c, 0x94, 0xf2, 0xe8, 0xc0,
	0x5d, 0x64, 0x06, 0x26, 0xa3, 0xe1, 0x9c, 0xcc, 0xf2, 0xa8, 0x8a, 0x37, 0x3a, 0xdb, 0x72, 0x56,
	0x40, 0xd5, 0x2a, 0x9a, 0x5c, 0xbc, 0x49, 0x52, 0x30, 0x7e, 0x1d, 0xcc, 0x65, 0x63, 0xd3, 0x32,
	0x94, 0x0d, 0x54, 0x4d, 0xc7, 0xf4, 0x16, 0x99, 0x84, 0xd1, 0xf6, 0x9c, 0x97, 0xa8, 0x3b, 0xd2,
	0xcd, 0x0f, 0x73, 0x3b, 0x92, 0xf3, 0xab, 0xbb, 0x43, 0x26, 0x60, 0xa4, 0x2d, 0xe7, 0xe5, 0xed,
	0x09, 0x99, 0xc9, 0x0a, 0x67, 0x65, 0xc6, 0x77, 0xc2, 0x11, 0x20, 0x14, 0x21, 0xc4, 0x79, 0x11,
	0xee, 0x46, 0xba, 0xf9, 0x11, 0xee, 0x85, 0x4a, 0xbb, 0xcc, 0x79, 0xa5, 0xdd, 0x8f, 0x34, 0xf3,
	0x73, 0xf6, 0x92, 0x45, 0x98, 0x6d, 0xbf, 0xa9, 0xac, 0x29, 0x98, 0xb7, 0x74, 0x7c, 0x63, 0xa2,
	0xe1, 0xec, 0xfd, 0x80, 0x4c, 0xc1, 0x58, 0x07, 0x1c, 0x55, 0x51, 0x24, 0x43, 0x90, 0x0c, 0x60,
	0xce, 0x7e, 0x7a, 0x2b, 0xe8, 0xc3, 0xd0, 0x10, 0x5f, 0xac, 0xe6, 0x98, 0x8e, 0xaa, 0x48, 0xc8,
	0x30, 0x0c, 0x5c, 0x59, 0x6b, 0x19, 0x3f, 0x22, 0xcf, 0x40, 0xea, 0x30, 0xb8, 0xe1, 0x9a, 0x1f,
	0x93, 0x39, 0x48, 0xc5, 0xd1, 0xa0, 0x2a, 0xf6, 0x11, 0x05, 0x5e, 0x06, 0x58, 0xcf, 0xa5, 0x69,
	0x8a, 0xdb, 0x1c, 0x75, 0x4d, 0xce, 0x5f, 0xe7, 0xc1, 0x34, 0xc6, 0x99, 0xec, 0x6c, 0xd8, 0x4f,
	0x5e, 0xc1, 0x8b, 0xff, 0x33, 0xf1, 0x4e, 0xef, 0x09, 0x59, 0x83, 0xd5, 0x80, 0x43, 0x94, 0xe4,
	0x4a, 0xde, 0x24, 0xa1, 0x30, 0x18, 0x10, 0x17, 0x64, 0x7d, 0x13, 0x75, 0x4b, 0x47, 0xa5, 0xa8,
	0xab, 0xa8, 0x8a, 0x03, 0x9d, 0xfb, 0x61, 0xb0, 0xd7, 0x9a, 0xec, 0x14, 0x32, 0x48, 0x16, 0x60,
	0xa6, 0xc3, 0x8d, 0x46, 0xbd, 0xc0, 0x34, 0x37, 0xf8, 0xd3, 0x18, 0xa7, 0x53, 0xd4, 0x38, 0xd3,
	0x4c, 0x54, 0x2d, 0xd9, 0xb0, 0x34, 0xdc, 0x12, 0x87, 0xc8, 0x2a, 0x2c, 0x07, 0x34, 0xee, 0x90,
	0x58, 0xca, 0x06, 0xcb, 0xab, 0xd1, 0x5d, 0x1e, 0x26, 0x2b, 0xb0, 0x14, 0x5f, 0xe8, 0x75, 0x96,
	0x92, 0x34, 0xcc, 0x07, 0x54, 0x6d, 0xf9, 0xe6, 0xb0, 0x8e, 0x90, 0x0c, 0x2c, 0xc6, 0x11, 0xf8,
	0x17, 0x74, 0x94, 0x48, 0x30, 0x17, 0x47, 0xe2, 0xd5, 0x34, 0x46, 0x96, 0x60, 0x21, 0xd6, 0x16,
	0xcd, 0x31, 0x1d, 0x8f, 0x5b, 0x94, 0x7f, 0xd1, 0x27, 0x42, 0x67, 0xd3, 0x5e, 0xe2, 0x9f, 0xe7,
	0x64, 0x68, 0x0c, 0x2f, 0xc6, 0x22, 0xe6, 0x2d, 0x98, 0x22, 0xcf, 0x61, 0xe5, 0xdf, 0xc4, 0x5e,
	0x3f, 0x52, 0x64, 0x19, 0xd2, 0x31, 0xa7, 0xbf, 0x35, 0xa9, 0xd3, 0xa1, 0x26, 0x9a, 0x25, 0x03,
	0x75, 0xee, 0x4b, 0x0c, 0x94, 0x75, 0x65, 0xc3, 0x92, 0x39, 0xd7, 0xd9, 0xba, 0xc9, 0xd1, 0x10,
	0x67, 0xd6, 0xbf, 0x0b, 0xc7, 0xa7, 0x34, 0x71, 0x72, 0x4a, 0x13, 0xe7, 0xa7, 0x54, 0xf8, 0xdc,
	0xa0, 0xc2, 0xd7, 0x06, 0x15, 0x7e, 0x34, 0xa8, 0x70, 0xdc, 0xa0, 0xc2, 0xaf, 0x06, 0x15, 0x7e,
	0x37, 0x68, 0xe2, 0xbc, 0x41, 0x85, 0x2f, 0x67, 0x34, 0x71, 0x7c, 0x46, 0x13, 0x27, 0x67, 0x34,
	0x01, 0xc9, 0x6a, 0x4d, 0xba, 0xf6, 0xa9, 0x5e, 0xef, 0x6d, 0xbd, 0xd3, 0x25, 0xe7, 0x45, 0x2f,
	0x09, 0x6f, 0xc7, 0xde, 0x07, 0xd8, 0x6a, 0xed, 0xd2, 0x17, 0xc0, 0x9a, 0xfb, 0xe3, 0x5b, 0x57,
	0x1f, 0x6f, 0x02, 0xb2, 0x5d, 0x95, 0xd0, 0x35, 0x2b, 0x67, 0xfe, 0x74, 0x25, 0x9b, 0xff, 0x67,
	0xb3, 0xb2, 0x5d, 0xcd, 0x66, 0xdd, 0x95, 0x6c, 0xb6, 0x9c, 0x79, 0xd7, 0xed, 0x7e, 0x30, 0x2c,
	0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xf4, 0xb2, 0x47, 0xa5, 0x5a, 0x08, 0x00, 0x00,
}

func (x EventType) String() string {
	s, ok := EventType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
