// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: temporal/api/enums/v1/common.proto

package enums

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EncodingType int32

const (
	ENCODING_TYPE_UNSPECIFIED EncodingType = 0
	ENCODING_TYPE_PROTO3      EncodingType = 1
	ENCODING_TYPE_JSON        EncodingType = 2
)

var EncodingType_name = map[int32]string{
	0: "Unspecified",
	1: "Proto3",
	2: "Json",
}

var EncodingType_value = map[string]int32{
	"Unspecified": 0,
	"Proto3":      1,
	"Json":        2,
}

func (EncodingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_768283dde248a0f8, []int{0}
}

type IndexedValueType int32

const (
	INDEXED_VALUE_TYPE_UNSPECIFIED IndexedValueType = 0
	INDEXED_VALUE_TYPE_TEXT        IndexedValueType = 1
	INDEXED_VALUE_TYPE_KEYWORD     IndexedValueType = 2
	INDEXED_VALUE_TYPE_INT         IndexedValueType = 3
	INDEXED_VALUE_TYPE_DOUBLE      IndexedValueType = 4
	INDEXED_VALUE_TYPE_BOOL        IndexedValueType = 5
	INDEXED_VALUE_TYPE_DATETIME    IndexedValueType = 6
)

var IndexedValueType_name = map[int32]string{
	0: "Unspecified",
	1: "Text",
	2: "Keyword",
	3: "Int",
	4: "Double",
	5: "Bool",
	6: "Datetime",
}

var IndexedValueType_value = map[string]int32{
	"Unspecified": 0,
	"Text":        1,
	"Keyword":     2,
	"Int":         3,
	"Double":      4,
	"Bool":        5,
	"Datetime":    6,
}

func (IndexedValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_768283dde248a0f8, []int{1}
}

type Severity int32

const (
	SEVERITY_UNSPECIFIED Severity = 0
	SEVERITY_HIGH        Severity = 1
	SEVERITY_MEDIUM      Severity = 2
	SEVERITY_LOW         Severity = 3
)

var Severity_name = map[int32]string{
	0: "Unspecified",
	1: "High",
	2: "Medium",
	3: "Low",
}

var Severity_value = map[string]int32{
	"Unspecified": 0,
	"High":        1,
	"Medium":      2,
	"Low":         3,
}

func (Severity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_768283dde248a0f8, []int{2}
}

func init() {
	proto.RegisterEnum("temporal.api.enums.v1.EncodingType", EncodingType_name, EncodingType_value)
	proto.RegisterEnum("temporal.api.enums.v1.IndexedValueType", IndexedValueType_name, IndexedValueType_value)
	proto.RegisterEnum("temporal.api.enums.v1.Severity", Severity_name, Severity_value)
}

func init() {
	proto.RegisterFile("temporal/api/enums/v1/common.proto", fileDescriptor_768283dde248a0f8)
}

var fileDescriptor_768283dde248a0f8 = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x6e, 0xd3, 0x40,
	0x14, 0x45, 0x3d, 0x2e, 0x54, 0x68, 0x28, 0x62, 0x18, 0x68, 0x09, 0xad, 0x18, 0xa4, 0x2e, 0x23,
	0x61, 0x2b, 0x74, 0x67, 0x56, 0x49, 0x3c, 0x6d, 0x07, 0x12, 0xdb, 0x4a, 0x26, 0x6e, 0xc3, 0x82,
	0xc8, 0x4d, 0x46, 0x61, 0xa4, 0xda, 0x63, 0xb9, 0x8e, 0x45, 0x77, 0x7c, 0x02, 0x9f, 0x81, 0xf8,
	0x12, 0x96, 0x59, 0x66, 0x49, 0x9c, 0x0d, 0x42, 0x2c, 0xf2, 0x09, 0x28, 0x16, 0x89, 0x14, 0xe4,
	0xee, 0x9e, 0xee, 0xb9, 0x4f, 0x57, 0xef, 0xe9, 0xc2, 0xe3, 0x54, 0x84, 0xb1, 0x4a, 0x82, 0x6b,
	0x33, 0x88, 0xa5, 0x29, 0xa2, 0x49, 0x78, 0x63, 0x66, 0x35, 0x73, 0xa8, 0xc2, 0x50, 0x45, 0x46,
	0x9c, 0xa8, 0x54, 0xe1, 0xfd, 0xb5, 0xc7, 0x08, 0x62, 0x69, 0x14, 0x1e, 0x23, 0xab, 0x55, 0x07,
	0x70, 0x8f, 0x46, 0x43, 0x35, 0x92, 0xd1, 0x98, 0xdf, 0xc6, 0x02, 0xbf, 0x84, 0x2f, 0xa8, 0xd3,
	0x74, 0x6d, 0xe6, 0x9c, 0x0d, 0x78, 0xdf, 0xa3, 0x83, 0x9e, 0xd3, 0xf5, 0x68, 0x93, 0x9d, 0x32,
	0x6a, 0x23, 0x0d, 0x57, 0xe0, 0xb3, 0x6d, 0xec, 0x75, 0x5c, 0xee, 0x9e, 0x20, 0x80, 0x0f, 0x20,
	0xde, 0x26, 0xef, 0xba, 0xae, 0x83, 0xf4, 0xea, 0x1f, 0x00, 0x11, 0x8b, 0x46, 0xe2, 0xb3, 0x18,
	0xf9, 0xc1, 0xf5, 0x44, 0x14, 0x29, 0xc7, 0x90, 0x30, 0xc7, 0xa6, 0x97, 0xd4, 0x1e, 0xf8, 0xf5,
	0x56, 0x8f, 0x96, 0x45, 0x1d, 0xc1, 0xe7, 0x25, 0x1e, 0x4e, 0x2f, 0x39, 0x02, 0x98, 0xc0, 0xc3,
	0x12, 0xf8, 0x9e, 0xf6, 0x2f, 0xdc, 0x8e, 0x8d, 0x74, 0x7c, 0x08, 0x0f, 0x4a, 0x38, 0x73, 0x38,
	0xda, 0x59, 0x9d, 0x58, 0xc2, 0x6c, 0xb7, 0xd7, 0x68, 0x51, 0x74, 0xef, 0x8e, 0xdc, 0x86, 0xeb,
	0xb6, 0xd0, 0x7d, 0xfc, 0x0a, 0x1e, 0x95, 0xed, 0xd6, 0x39, 0xe5, 0xac, 0x4d, 0xd1, 0x6e, 0xf5,
	0x23, 0x7c, 0xd0, 0x15, 0x99, 0x48, 0x64, 0x7a, 0xbb, 0x7a, 0x56, 0x97, 0xfa, 0xb4, 0xc3, 0x78,
	0xff, 0xbf, 0xdb, 0x9e, 0xc0, 0x47, 0x1b, 0x72, 0xce, 0xce, 0xce, 0x11, 0xc0, 0x4f, 0xe1, 0xe3,
	0x8d, 0xd4, 0xa6, 0x36, 0xeb, 0xb5, 0x91, 0x8e, 0x11, 0xdc, 0xdb, 0x88, 0x2d, 0xf7, 0x02, 0xed,
	0x34, 0x66, 0x60, 0x3a, 0x27, 0xda, 0x6c, 0x4e, 0xb4, 0xe5, 0x9c, 0x80, 0x2f, 0x39, 0x01, 0xdf,
	0x72, 0x02, 0x7e, 0xe4, 0x04, 0x4c, 0x73, 0x02, 0x7e, 0xe6, 0x04, 0xfc, 0xca, 0x89, 0xb6, 0xcc,
	0x09, 0xf8, 0xba, 0x20, 0xda, 0x74, 0x41, 0xb4, 0xd9, 0x82, 0x68, 0xb0, 0x22, 0x95, 0x51, 0x5a,
	0x80, 0xc6, 0xc3, 0x66, 0xd1, 0x12, 0x6f, 0x55, 0x12, 0x0f, 0x7c, 0x38, 0x1d, 0xcb, 0xf4, 0xd3,
	0xe4, 0xca, 0x18, 0xaa, 0xd0, 0x5c, 0x2f, 0x48, 0x65, 0x4e, 0xe4, 0xeb, 0x1b, 0x91, 0x64, 0x22,
	0x31, 0xb3, 0x37, 0xe6, 0xbf, 0x69, 0x2c, 0x22, 0x91, 0x04, 0xa9, 0x18, 0x6d, 0xb5, 0xee, 0x6d,
	0x31, 0x7c, 0xd7, 0xf7, 0xf9, 0x3a, 0xae, 0x1e, 0x4b, 0x83, 0x16, 0x71, 0x7e, 0xed, 0xb7, 0x5e,
	0x59, 0xeb, 0x96, 0x55, 0x8f, 0xa5, 0x65, 0x15, 0xc4, 0xb2, 0xfc, 0xda, 0xd5, 0x6e, 0x51, 0xd4,
	0x93, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x20, 0x94, 0x28, 0xce, 0x02, 0x00, 0x00,
}

func (x EncodingType) String() string {
	s, ok := EncodingType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x IndexedValueType) String() string {
	s, ok := IndexedValueType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x Severity) String() string {
	s, ok := Severity_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
