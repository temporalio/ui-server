var E=Object.defineProperty;var d=Object.getOwnPropertySymbols;var S=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;var m=(e,t,r)=>t in e?E(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,a=(e,t)=>{for(var r in t||(t={}))S.call(t,r)&&m(e,r,t[r]);if(d)for(var r of d(t))L.call(t,r)&&m(e,r,t[r]);return e};import{n as y}from"./notifications-2aab2c71.js";const T=e=>{console.error(e),typeof e=="string"&&y.add("error",e),e instanceof Error&&y.add("error",e.message)},U=e=>typeof e=="function",x=(e,t)=>{const r=t instanceof URLSearchParams;return t&&!r&&(t=new URLSearchParams(t)),t?`${e}?${t}`:e},p=e=>e.message!==void 0&&typeof e.message=="string",$=async(e,t={},r=10)=>{const{params:n={},request:s=fetch,token:c,shouldRetry:w=!1,onError:f,retryInterval:g=5e3}=t;let{options:u}=t;const k=c?{next_page_token:c}:{},P=new URLSearchParams(a(a({},n),k)),R=x(e,P);try{u=q(u);const o=await s(R,u),i=await o.json(),{status:l,statusText:h}=o;if(!o.ok)if(f&&U(f))f({status:l,statusText:h,body:i});else throw new Error(`${l}: ${h}`);return i}catch(o){if(T(o),w&&r>0)return new Promise(i=>{setTimeout(()=>{i($(e,t,r-1))},g)})}},q=e=>{const t=a({credentials:"include"},e);return t.headers=F(e==null?void 0:e.headers),t},F=e=>{e||(e={});const t="_csrf=",r="X-CSRF-TOKEN";try{let s=document.cookie.split(";").find(c=>c.includes(t));s&&!e[r]&&(s=s.trim().slice(t.length),e[r]=s)}catch(n){console.error(n)}return e};export{U as a,T as h,p as i,$ as r};
