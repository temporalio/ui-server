import{c as C,p as b}from"./is-http-fb97cc49.js";import{g as y,b as T,c as g,a as v,d as k}from"./get-codec-fef26f64.js";import{f as w}from"./format-date-54c1193f.js";import{f as P}from"./is-event-type-a8aff766.js";import{g as S}from"./get-event-categorization-d6ff7ec7.js";import{s as R}from"./simplify-attributes-badfcd03.js";const q=["Unspecified","Scheduled","Open","New","Started","Initiated","Running","Completed","Fired","CancelRequested","TimedOut","Signaled","Canceled","Failed","Terminated"],E=e=>{if(e.includes("RequestCancel"))return"CancelRequested";for(const o of q)if(e.includes(o))return o};async function W({historyEvent:e,namespace:o,settings:t,accessToken:s},{convertWithCodec:a=g,convertWithWebsocket:n=v,decodeAttributes:i=k,encoderEndpoint:r=C,codecPassAccessToken:d=b}={}){const{key:m,attributes:c}=P(e),p=y(t,r),u=T(t,d),f={...t,codec:{...t==null?void 0:t.codec,endpoint:p,passAccessToken:u}},l=p?await a({attributes:c,namespace:o,settings:f,accessToken:s}):await n(c),A=i(l);return{type:m,...A}}const F=async({historyEvent:e,namespace:o,settings:t,accessToken:s})=>{const a=String(e.eventId),n=e.eventType,i=w(String(e.eventTime)),r=E(n),d=S(n),m=await W({historyEvent:e,namespace:o,settings:t,accessToken:s}).then(c=>R(c));return{...e,name:n,id:a,eventType:n,timestamp:i,classification:r,category:d,attributes:m}},K=async({response:e,namespace:o,settings:t,accessToken:s})=>await Promise.all(e.map(a=>F({historyEvent:a,namespace:o,settings:t,accessToken:s})));export{K as t};
