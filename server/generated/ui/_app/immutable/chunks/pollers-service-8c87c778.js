import{r as k,a as y}from"./route-for-api-658a0b67.js";async function o(c,t={returnAllPollers:!1},T=fetch){const a=await k(y("task-queue",c),{request:T,params:{taskQueueType:"1"}}),s=await k(y("task-queue",c),{request:T,params:{taskQueueType:"2"}});s.pollers.forEach(e=>{e.taskQueueTypes=["ACTIVITY"]}),a.pollers.forEach(e=>{e.taskQueueTypes=["WORKFLOW"]});const i=e=>(u,r)=>{const l=u[r.identity]||{lastAccessTime:void 0,taskQueueTypes:[]};return u[r.identity]={lastAccessTime:!l.lastAccessTime||l.lastAccessTime<r.lastAccessTime?r.lastAccessTime:l.lastAccessTime,taskQueueTypes:l.taskQueueTypes.concat([e])},u};s.pollers.filter(e=>a.pollers.some(u=>{if(e.identity===u.identity)return e.taskQueueTypes=[...u.taskQueueTypes,...e.taskQueueTypes],e})),s.pollers.reduce(i("ACTIVITY"),a.pollers.reduce(i("WORKFLOW"),{}));const n=(t==null?void 0:t.returnAllPollers)&&!s.pollers.length?a.pollers:s.pollers,Q=(t==null?void 0:t.returnAllPollers)&&!s.pollers.length?a.taskQueueStatus:s.taskQueueStatus;return{pollers:n,taskQueueStatus:Q}}export{o as g};
