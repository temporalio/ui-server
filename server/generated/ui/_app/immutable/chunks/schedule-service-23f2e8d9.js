import{r as d,a as r}from"./route-for-api-658a0b67.js";var f,g=new Uint8Array(16);function m(){if(!f&&(f=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto<"u"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!f))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return f(g)}const S=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function v(e){return typeof e=="string"&&S.test(e)}var n=[];for(var l=0;l<256;++l)n.push((l+256).toString(16).substr(1));function x(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,s=(n[e[t+0]]+n[e[t+1]]+n[e[t+2]]+n[e[t+3]]+"-"+n[e[t+4]]+n[e[t+5]]+"-"+n[e[t+6]]+n[e[t+7]]+"-"+n[e[t+8]]+n[e[t+9]]+"-"+n[e[t+10]]+n[e[t+11]]+n[e[t+12]]+n[e[t+13]]+n[e[t+14]]+n[e[t+15]]).toLowerCase();if(!v(s))throw TypeError("Stringified UUID is invalid");return s}function h(e,t,s){e=e||{};var o=e.random||(e.rng||m)();if(o[6]=o[6]&15|64,o[8]=o[8]&63|128,t){s=s||0;for(var u=0;u<16;++u)t[s+u]=o[u];return t}return x(o)}const T=async(e,t=fetch)=>{var i;let s="";const o=a=>{var p,y;return s=(y=(p=a==null?void 0:a.body)==null?void 0:p.message)!=null?y:`Error fetching schedules: ${a.status}: ${a.statusText}`},{schedules:u,nextPageToken:c}=(i=await d(r("schedules",{namespace:e}),{params:{},onError:o,request:t}))!=null?i:{schedules:[],nextPageToken:""};return{schedules:u,nextPageToken:String(c),error:s}};async function R(e,t=fetch){return d(r("schedule",e),{request:t})}async function b(e,t=fetch){return d(r("schedule.delete",e),{request:t,options:{method:"DELETE"}})}async function w({namespace:e,body:t}){let s="";const o=c=>{var i,a;return s=(a=(i=c==null?void 0:c.body)==null?void 0:i.message)!=null?a:`Error creating schedule: ${c.status}: ${c.statusText}`},{conflictToken:u}=await d(r("schedules",{namespace:e}),{options:{method:"POST",body:JSON.stringify({request_id:h(),...t})},shouldRetry:!1,onError:o});return{conflictToken:u,error:s}}async function C({namespace:e,scheduleId:t,reason:s}){const o={patch:{pause:s}};return await d(r("schedule",{namespace:e,scheduleId:t}),{options:{method:"PATCH",body:JSON.stringify({...o,request_id:h()})},shouldRetry:!1,onError:u=>console.error(u)})}async function P({namespace:e,scheduleId:t,reason:s}){const o={patch:{unpause:s}};return await d(r("schedule",{namespace:e,scheduleId:t}),{options:{method:"PATCH",body:JSON.stringify({...o,request_id:h()})},shouldRetry:!1})}export{T as a,w as c,b as d,R as f,C as p,P as u};
