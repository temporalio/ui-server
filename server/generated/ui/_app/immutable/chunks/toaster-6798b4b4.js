import{w as p}from"./index-73e3ae8e.js";let c;const s=new Uint8Array(16);function m(){if(!c&&(c=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!c))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return c(s)}const e=[];for(let t=0;t<256;++t)e.push((t+256).toString(16).slice(1));function y(t,n=0){return(e[t[n+0]]+e[t[n+1]]+e[t[n+2]]+e[t[n+3]]+"-"+e[t[n+4]]+e[t[n+5]]+"-"+e[t[n+6]]+e[t[n+7]]+"-"+e[t[n+8]]+e[t[n+9]]+"-"+e[t[n+10]]+e[t[n+11]]+e[t[n+12]]+e[t[n+13]]+e[t[n+14]]+e[t[n+15]]).toLowerCase()}const l=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),r={randomUUID:l};function U(t,n,i){if(r.randomUUID&&!n&&!t)return r.randomUUID();t=t||{};const o=t.random||(t.rng||m)();if(o[6]=o[6]&15|64,o[8]=o[8]&63|128,n){i=i||0;for(let d=0;d<16;++d)n[i+d]=o[d];return n}return y(o)}const u=p([]),g=t=>{const n={id:U(),duration:3e3,variant:"primary",...t};u.update(o=>[...o,n]);const i=setTimeout(()=>{a(n.id),clearTimeout(i)},n.duration)},a=t=>{u.update(n=>n.filter(i=>i.id!==t))},x=()=>{u.set([])},h={push:g,pop:a,clear:x,toasts:u,set:u.set,subscribe:u.subscribe,update:u.update};export{h as t,U as v};
