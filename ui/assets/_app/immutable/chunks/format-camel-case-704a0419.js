const s=(o,n)=>{const t=o.charCodeAt(n);return t>=65&&t<=90},f=o=>o[0].toUpperCase()+o.slice(1),i=new Set(["workflowType"]),e={workflowExecutionWorkflowId:"workflowExecution",workflowExecutionRunId:"workflowExecution"},u=o=>i.has(o)?`${o}Name`:e[o]?o.replace(e[o],""):o,p=o=>{let n="",t=0;for(o=u(o);t<(o==null?void 0:o.length);){const r=o[t],c=o[t+1];if(t===0){n+=o[t].toUpperCase(),t++;continue}if(r+c==="Id"){n+=" ID",t+=2;continue}if(s(o,t)){n+=" ",n+=r.toUpperCase(),t++;continue}n+=r,t++}return n};export{f as c,p as f};
