import{b as o}from"./paths.01138a2e.js";const p=!0,h=p,F=(e,r)=>{const t=r instanceof URLSearchParams;return r&&!t&&(r=new URLSearchParams(r)),r?`${e}?${r}`:e};function c(e){return e&&e.replace(/%/g,"%25").replace(/,/g,"%2C").replace(/\//g,"%2F").replace(/\\/g,"%5C").replace(/\?/g,"%3F").replace(/:/g,"%3A").replace(/@/g,"%40").replace(/&/g,"%26").replace(/=/g,"%3D").replace(/\+/g,"%2B").replace(/\$/g,"%24").replace(/#/g,"%23")}function m(e){return e&&e.replace(/%2C/g,",").replace(/%2F/g,"/").replace(/%5C/g,"\\").replace(/%3F/g,"?").replace(/%3A/g,":").replace(/%40/g,"@").replace(/%26/g,"&").replace(/%3D/g,"=").replace(/%2B/g,"+").replace(/%24/g,"$").replace(/%23/g,"#").replace(/%25/g,"%")}const w=()=>`${o}/namespaces`,u=({namespace:e})=>`${o}/namespaces/${e}`,S=()=>`${o}/select-namespace`,f=e=>`${u(e)}/workflows`,P=e=>`${u(e)}/archival`,s=({workflow:e,run:r,...t})=>{const n=c(e);return`${f(t)}/${n}/${r}`},i=e=>`${u(e)}/schedules`,U=({namespace:e})=>`${i({namespace:e})}/create`,k=({scheduleId:e,namespace:r})=>{const t=c(e);return`${i({namespace:r})}/${t}`},v=({scheduleId:e,namespace:r})=>{const t=c(e);return`${i({namespace:r})}/${t}/edit`},R=({queryParams:e,...r})=>{const t=`${s(r)}/history`;return F(`${t}`,e)},y=e=>`${s(e)}/workers`,L=e=>{const r=c(e.queue);return`${u({namespace:e.namespace})}/task-queues/${r}`},W=e=>`${s(e)}/stack-trace`,b=e=>`${s(e)}/query`,q=e=>`${s(e)}/pending-activities`,A=e=>{const{settings:r,searchParams:t,originUrl:n}=e,a=new URL(`${o}/auth/sso`,r.baseUrl);let l=r.auth.options??[];return l=[...l,"returnUrl"],l.forEach(g=>{if(!t)return;const $=t.get(g);$&&a.searchParams.set(g,$)}),!a.searchParams.get("returnUrl")&&n&&a.searchParams.set("returnUrl",n),a.toString()},C=(e="",r=h)=>{if(r){const t=new URL(`${o}/login`,window.location.origin);return t.searchParams.set("returnUrl",window.location.href),e&&t.searchParams.set("error",e),t.toString()}return`${o}/login`},E=(e,r)=>e&&r?`${o}/import/events/${e}/workflow/run/history/${r}`:`${o}/import/events`;export{P as a,w as b,i as c,E as d,C as e,h as f,R as g,y as h,q as i,W as j,b as k,m as l,S as m,L as n,u as o,k as p,U as q,f as r,v as s,F as t,A as u};
