import{d as G,w as l,g as o}from"./Bq4CR0Xw.js";import{h as H}from"./BDfAQ6r3.js";const I=100,M=["100","250","500"],z="per-page",C="page",D=M[M.length-1],N=(n,t)=>Math.floor(n/t)+1,O=(n,t)=>t<=9?new Array(t).fill(0).map((i,a)=>a+1):n<5?[1,2,3,4,5,NaN,t-2,t-1,t]:n>=5&&n<=t-5?[1,2,NaN,n-1,n,n+1,NaN,t-1,t]:n>=t-5?[1,2,NaN,t-5,t-4,t-3,t-2,t-1,t]:[],S=(n,t,i)=>{if(isNaN(n)||n<=1)return 0;if(n>j(t,i)){const a=i.length-t;return a>0?a:0}return Math.floor(t*(n-1))},X=(n,t,i)=>{const a=N(n,t);return S(a,t,i)},R=(n,t)=>Math.min(n-1,t-1),j=(n,t)=>Math.ceil(t.length/n),p=(n,t)=>isNaN(n)||n<0?0:n<t.length?n:t.length-1,x=(n,t)=>n>=t.length||n<0,J=(n=[],t=I,i=0)=>{t=Z(t);const a=X(b(i),t,n),u=l(t),d=l(a),s=l(void 0),A=r=>{u.set(b(r))},T=()=>{g(),d.update(r=>{const e=r+o(u);return x(e,n)?r:p(e,n)})},y=()=>{g(),d.update(r=>{const e=r-o(u);return p(e,n)})},h=r=>{const e=o(u),f=S(Number(r),e,n),c=n.slice(f,f+e).length;return o(s)>c-1&&s.set(c-1),d.set(f)},F=r=>{const e=N(Number(r),o(u));h(e)},_=r=>{const e=r==null?void 0:r.slice(1);if(e){const f=n.findIndex(c=>H(c,"id")&&(c==null?void 0:c.id)===e);if(f!==-1){const c=N(f,o(u));c!==i&&h(c)}}},v=r=>{for(let e=0;e<n.length;e++)if(r(n[e]))return e},E=r=>{const e=v(r);return N(e,o(u))},g=(r=void 0)=>{r===void 0&&s.set(r);const e=n.slice(o(d),o(d)+o(u)).length,f=R(e,o(u));r<=f&&s.set(r)},K=()=>{const r=n.slice(o(d),o(d)+o(u)).length,e=R(r,o(u));o(s)===void 0?s.set(0):o(s)<e&&s.set(o(s)+1)},m=()=>{const r=o(s)>=1?o(s)-1:0;s.set(r)},{subscribe:B}=G([d,u,s],([r,e,f])=>{const c=j(e,n),w=N(r,e);return{items:n.slice(r,r+e),initialItem:n[0],hasPrevious:!x(r-e,n),hasNext:!x(r+e,n),startingIndex:r,endingIndex:p(r+e-1,n),length:n.length,pageSize:e,currentPage:w,totalPages:c,activeRowIndex:f,pageShortcuts:O(w,c)}});return{subscribe:B,adjustPageSize:A,next:T,previous:y,jumpToPage:h,jumpToIndex:F,jumpToHashPage:_,findIndex:v,findPage:E,nextRow:K,previousRow:m,setActiveRowIndex:g}},Z=(n=I)=>{const t=b(n);return isNaN(t)||!t?I:t},b=(n=0)=>{const t=Number(n);return isNaN(t)||!t?0:Math.abs(t)};export{D as M,J as a,Z as b,C as c,I as d,M as o,z as p};
